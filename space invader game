import pygame
import random
import math

pygame.init()

# Create the screen
screen = pygame.display.set_mode((800, 600))
# Background
background = pygame.image.load('spcae.png')

# Caption and icon
pygame.display.set_caption("Space Invaders")
icon = pygame.image.load('alien.png')
pygame.display.set_icon(icon)

# Player
playerImg = pygame.image.load('player0.png')
playerX = 370
playerY = 480
playerX_change = 0  # Initialize movement variable

# Monsters
monsterImg = []
monsterX = []
monsterY = []
monsterX_change = []
monsterY_change = []
num_of_monster = 6

for i in range(num_of_monster):
    monsterImg.append(pygame.image.load('monster.png'))
    monsterX.append(random.randint(0, 735))
    monsterY.append(random.randint(50, 150))
    monsterX_change.append(2)
    monsterY_change.append(40)

# Bullet
bulletImg = pygame.image.load('bullet.png')
bulletX = 0
bulletY = 480
bulletX_change = 0
bulletY_change = 10
bullet_state = "ready"

# Score
score_value = 0
font = pygame.font.Font('font.zip',32)

textX = 10
textY = 10

def show_score(x,y):
    score = font.render("Score :" + str(score_value),True, (255,255,255))
    screen.blit(playerImg, (x, y))

def player(x,y):
    screen.blit(playerImg, (x,y))

# Functions
def player(x, y):
    screen.blit(playerImg, (x, y))

def monster(x, y, i):
    screen.blit(monsterImg[i], (x, y))

def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletImg, (x + 16, y + 10))

def iscollision(monsterX, monsterY, bulletX, bulletY):
    distance = math.sqrt((math.pow(monsterX - bulletX, 2)) + (math.pow(monsterY - bulletY, 2)))
    return distance < 27

# Game loop
running = True
while running:
    # Fill the screen with black
    screen.fill((0, 0, 0))
    # Background image
    screen.blit(background, (0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        # Check for keystrokes
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                playerX_change = -4  # Move left
            if event.key == pygame.K_RIGHT:
                playerX_change = 4  # Move right
            if event.key == pygame.K_SPACE:
                if bullet_state == "ready":
                    bulletX = playerX
                    fire_bullet(bulletX, bulletY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                playerX_change = 0

    # Update player position
    playerX += playerX_change
    if playerX <= 0:
        playerX = 0
    elif playerX >= 736:  # 800 (screen width) - 64 (player width)
        playerX = 736

    # Monster movement
    for i in range(num_of_monster):
        monsterX[i] += monsterX_change[i]
        if monsterX[i] <= 0:
            monsterX_change[i] = 2
            monsterY[i] += monsterY_change[i]
        elif monsterX[i] >= 736:
            monsterX_change[i] = -2
            monsterY[i] += monsterY_change[i]

        # Collision
        collision = iscollision(monsterX[i], monsterY[i], bulletX, bulletY)
        if collision:
            bulletY = 480
            bullet_state = "ready"
            score_value  += 1
            #print(f"Score: {score}")
            monsterX[i] = random.randint(0, 735)
            monsterY[i] = random.randint(50, 150)

        # Draw the monster
        monster(monsterX[i], monsterY[i], i)

    # Bullet movement
    if bullet_state == "fire":
        fire_bullet(bulletX, bulletY)
        bulletY -= bulletY_change
        if bulletY <= 0:
            bulletY = 480
            bullet_state = "ready"

    # Draw the player
    player(playerX, playerY)
    show_score(textX,textY)
    # Update the display
    pygame.display.update()
